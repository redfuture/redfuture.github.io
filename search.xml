<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Hexo安装，配置]]></title>
    <url>%2F2019%2F01%2F05%2Fhexo-install-config%2F</url>
    <content type="text"><![CDATA[前言在网络上游荡20几年，没有一个稳定的博客空间，很多自己的总结/随笔都是以文本文件的形式存储在本地，主要因为下面几个原因： 感觉大部分的博客空间都随时有消失的可能，免费空间大都有各种限制，没有安全感，不想自己多年的心血白费 大部分博客中的内容的富文本格式不可移植，不能很方便的同步在多个空间 我懒，本地存储虽然low但是使用、搜索、编辑起来还是很方便的 不过如今的网络文章写作已经很不同了，Markdown的流行甚至成了一种标准，主流的博客平台基本都开始支持Markdown格式，这让一次写作多处发布成为了可能，而且Markdown格式的文本在本地也很容易存储、编辑、解析后更已读、能够方便的导出为html,pdf等多种格式分享。很大程度上减轻了维护一个甚至多个博客空间的工作量。 支持Markdown写作的博客有多种选择，比如 在线的：简书，github，博客园，SegmentFault，开源中国，图灵社区等 blog建站系统：hexo，jekyII，wordpress，Ghost，gitblog，CMD Markdown，startblog等 我自己目前的需求是以本地为中心，能够方便的生成静态页面或直接上传Markdown文档后进行多位置的部署，又不想受各博客空间的模板限制，又想稳定方便，所以，自己搭搭建可以说是个很好的选择。在这里，我将介绍我当前博客的搭建方法：使用自己的虚拟主机+Github Page同步发布，基于Hexo框架，采用nexT模板。下面就把自己搭建，配置过程和使用方法进行一个记录。 我自己的博客环境的需求： 能在多台电脑随时写作更新，能在本地查看格式化后内容，能根据内容搜索。 博客空间位于两个位置：自己的虚拟主机和github.io ，可以同步更新。 对于文章可以有选择地复制到其它在线空间。 Hexo安装配置什么是Hexo？Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。Hexo基于Node.js，依赖少易于安装使用，可以方便的生成静态网页托管在GitHub上，是搭建博客的首选框架。 最好的介绍还是上官网链接：https://hexo.io/zh-cn/ 安装我的安装环境是一个刚刚在本地重装好的centos7虚拟机，首先我会用这台主机作为初始空间配置的生成，并运行独立的http服务器。 安装gitHexo, node.js, Hexo主题，后续空间的发布，配置及文章的同步都需要git作为工具。 Linux (Fedora, Red Hat, CentOS)：sudo yum install git-core Linux (Ubuntu, Debian)：sudo apt-get install git-core Windows：下载并安装 git. Mac：使用Homebrew, MacPorts：brew install git ;或下载安装程序安装。 由于众所周知的原因，从上面的链接下载git for windows最好挂上一个代理，否则下载速度十分缓慢。也可以参考这个页面，收录了存储于百度云的下载地址。 安装Node.js安装 Node.js 的最佳方式是使用nvm。 cURL: 1$ curl https://raw.github.com/creationix/nvm/v0.33.11/install.sh | sh Wget: 1$ wget -qO- https://raw.github.com/creationix/nvm/v0.33.11/install.sh | sh 安装完成后，重启终端并执行下列命令即可安装Node.js： 1$ nvm install stable 或者您也可以下载安装程序来安装。 对于windows用户来说，建议使用安装程序进行安装。安装时，请勾选Add to PATH选项。另外，您也可以使用Git Bash，这是git for windows自带的一组程序，提供了Linux风格的shell，在该环境下，您可以直接用上面提到的命令来安装Node.js。打开它的方法很简单，在任意位置单击右键，选择“Git Bash Here”即可。由于Hexo的很多操作都涉及到命令行，您可以考虑始终使用Git Bash来进行操作。 安装Hexo所有必备的应用程序安装完成后，即可使用 npm 安装 Hexo。 1$ npm install -g hexo-cli 配置以上Hexo最基本的组件已经全部安装完成，后续可能还会需要其它的依赖组件，在配置过程中用到时再随时安装。 创建一个Hexo运行目录Hexo系统需要一个目录用来初始化生成博客空间所需要的全部文件，我选择在自己home目录下的hexo文件夹： 1$ mkdir ~/hexo 初始化运行目录请执行下列命令，Hexo将会在指定文件夹中新建所需要的文件。 123$ hexo init ~/hexo$ cd ~/hexo$ npm install 新建完成后，文件夹hexo内的目录如下： 12345678.├── _config.yml├── package.json├── scaffolds├── source| ├── _drafts| └── _posts└── themes 其中各文件和目录的作用： _config.yml: 网站的 配置 信息，您可以在此配置大部分的参数。 package.json: 应用程序的信息。一般无需更改。 scaffolds: 模版 文件夹。当新建文章时，Hexo 会根据scaffold来建立文件。Hexo的模板是指在新建的markdown文件中默认填充的内容。例如，如果修改scaffold/post.md中的Front-matter内容，那么每次新建一篇文章时都会包含这个修改。 source: 资源文件夹是存放用户资源的地方。除 _posts 文件夹之外，开头命名为 _ (下划线)的文件 / 文件夹和隐藏的文件将会被忽略。Markdown 和 HTML 文件会被解析并放到 public 文件夹，而其他文件会被拷贝过去。 themes: 主题 文件夹。Hexo 会根据主题来生成静态页面。 执行完初始化，就可以预览一下hexo的初始样貌了，可以在~/hexo目录下执行如下命令: 12$ hexo generate$ hexo server 执行完毕后可以通过浏览器访问http://server-ip:4000/来访问 配置hexo安装nexT主题我个人很喜欢hexo的NexT主题，所以配置过程中一起安装这个主题。NexT主题是托管在github上的，其主页地址：https://github.com/iissnan/hexo-theme-next 安装方法： 123cd ~/hexomkdir -p themes/nextcurl -s https://api.github.com/repos/iissnan/hexo-theme-next/releases/latest | grep tarball_url | cut -d '"' -f 4 | wget -i - -O- | tar -zx -C themes/next --strip-components=1 修改hexo站点基本配置~/hexo/_config.yml可以在 _config.yml 中修改大部分的配置。以下是我修改的内容： 参数 描述 title 网站标题 subtitle 网站副标题 description 网站描述。主要用于SEO，告诉搜索引擎一个关于您站点的简单描述，通常建议在其中包含您网站的关键词。 author 您的名字，用于显示文章的作者。 language 网站使用的语言，简体中文应设置为zh-Hans，支持的语言列表可参看所用主题的目录：themes/next/languages/ timezone 网站时区。Hexo默认使用您电脑的时区。为增加移植性设定为北京时间：Asia/Shanghai ，参考时区列表。 url 网址，填http://自己网站域名 root 网站根目录，本blog在网站中的目录 theme 当前主题名称，即themes目录下主题目录的名称。我安装了NexT主题，这里设置为 next deploy 部署部分的设置，将在下面章节详述 如果您的网站存放在子目录中，例如 http://yoursite.com/blog，则请将您的 url 设为 http://yoursite.com/blog 并把 root 设为 /blog/。 下列参数是可能会用到的，我目前保留了默认值： 参数 描述 默认值 permalink 文章的 永久链接 格式 :year/:month/:day/:title/ permalink_defaults 永久链接中各部分的默认值 default_category 默认分类 uncategorized date_format 日期格式 Hexo 使用 Moment.js 来解析和显示时间。 YYYY-MM-DD time_format 时间格式 H:mm:ss per_page 每页显示的文章量 (0 = 关闭分页功能) 10 pagination_dir 分页目录 page 修改NexT主题配置~/hexo/themes/next/_config.yml关于NexT主题的全部详细配置方法见官网：https://theme-next.iissnan.com 我自己对NexT主题配置文件的修改如下： 显示在菜单导航栏中的项目1234567menu: home: / || home categories: /categories/ || th tags: /tags/ || tags archives: /archives/ || archive about: /about/ || user sitemap: /sitemap.xml || sitemap categories和tags页面将在后面使用hexo命令创建 主题显示布局，默认为Muse，更改为更简洁的Mist1234#scheme: Musescheme: Mist#scheme: Pisces#scheme: Gemini 修改社交媒体及联系方式123social: GitHub: https://github.com/redfuture || github E-Mail: mailto:redfuture@hotmail.com || envelope 其中第一部分为显示的文字名称，第二部分为链接，第三部分为显示的图标对应的fontawesome icons的名称 添加站点建立时间12footer: since: 2019 添加背景动画1canvas_nest: true 使用night风格的代码高亮显示1highlight_theme: night 至此hexo站点与next主题基本配置完毕。接下来使用hexo命令创建categories和tags页面，并新建一个新的文章。 使用hexo我希望在站点首页的导航菜单栏里添加两个链接： 分类：显示所有文章分类的页面，点击分类后显示这个分类下的所有文章 标签：所有文章使用过的标签页面，点击相应标签可以查看所有有此标签的文章 创建categories和tags页面hexo中创建页面的方式是相同的，使用以下命令：123$ hexo new page categories$ hexo new page tags$ hexo new page about 我同时还创建了一个关于页面，可以添加个人的简历，这个些可以和NexT主题配置文件中menu下面的子项相对应。命令执行后的结果就是在~/hexo/source/目录下分别生成了三个目录：categories，tags，about。每个目录中都有一个index.md。 修改post模板我们有了categories页面及tags页面，希望在以后发布的每篇博客都指定一个分类（Hexo仅支持一篇文章属于一个分类，不能属于多个分类），并设置多个标签。那么可以修改scaffolds/post.md文件，这个文件中的内容在以后每次用命令行创建新文章时会自动复制到新文章的md文件中。将其内容修改成：123456789---title: &#123;&#123; title &#125;&#125;date: &#123;&#123; date &#125;&#125;categories:- defaulttags:- default1- default2--- 发布新文章现在所有都已经准备就绪，可以发布自己的第一篇文章了：1$ hexo new post "title" 命令执行后创建~/hexo/source/_post/title.md ,随后就可以使用熟悉的编辑器编辑title.md了 或者可以先创建一个草稿：1$ hexo new draft "title" 会生成~/hexo/source/_post/title.md，编辑完成后执行1$ hexo publish post "title" 会将文件移动到~/hexo/source/_post/title.md 生成静态页面并部署文章写作完成后可以执行如下命令生成静态页面：12345678$ hexo generate (hexo g) 由当前目录下的配置和文章生成新的博客静态页面$ hexo server (hexo s) 启动本地http server服务，默认在4000端口$ hexo deploy (hexo d) 提交到远程仓库$ hexo new page "xx"(hexo n page) 创建页面 $ hexo new "xx" (hexo n "") 创建文章$ hexo d -g 生成静态并提交到远程仓库$ hexo s -g 生成静态文件并启动本地预览$ hexo clean 如果修改了配置文件，建议先执行这个步骤，将public下的文件全部清除，重新生成 之后就可以在http://localhost:4000/看到刚才发布的文章了。至此hexo基础环境已经搭建完成。 将静态页面部署到github.iogithub为每个用户提供了一个无限容量的静态页面空间：your-github-username.github.io hexo也提供了方便的将自己的博客部署到github.io的功能： 登录自己github，确认已经存在username.github.io代码库，没有的话创建一个（必须以.github.io做后缀）。 生成一对RSA key, 命令如下： 1$ ssh-keygen -t rsa -b 4096 -C "自己的标识" 一路回车，会在~/.ssh/目录下生成两个文件：id_rsa和id_rsa.pub ，id_rsa自己保留好这是私钥。 将上面生成的id_rsa.pub配置到github账户，以便可以免密从自己的代码库check in/out代码。具体参见github帮助文档：Adding a new SSH key to your GitHub account 验证是否添加key成功： 1$ ssh -T git@github.com 修改站点配置文件：~/hexo/_config.yml 1234deploy: type: git repo: git@github.com:username.github.io.git branch: master 安装hexo的git插件 1$ npm install hexo-deployer-git --save 运行命令进行部署： 12$ hexo g$ hexo d 之后就可以在 http://username.github.io 看到自己的博客了。 写作环境博客基本成形了，同时发布在了github.io。但是有一个问题，如何能方便的在任意电脑上都能随时随地的码字更新，修改配置呢？ 建立个性化内容的代码库分析Hexo的文档结构后发现会被我们使用的配置文件和存储文章md文件的目录其实很集中，那么我们可以把这些可能被改变的文件提取出来，单独存放在一个github的代码库，这样每当需要修改配置，或添加新文章时就可以先去代码库checkout，修改，然后checkin了。只要电脑有git客户端和一个markdown编辑器就够了。 在github建立一个新代码库，假设名称为：myblog_site 将本地hexo运行目录中需要保存到github的易变内容提取出来： 12345$ mkdir ~/myblog_site$ mkdir -p ~/myblog_site/themes/next$ cd ~/hexo/$ cp -a _config.yml scaffolds source ~/myblog_site/ #拷贝站点配置，模板，文章目录至代码库目录$ cp themes/next/_config.yml ~/myblog_site/themes/next/ #拷贝NexT主题配置文件至代码库相同路径下 将~/myblog_site/ 初始化为git目录，并于新建立的代码库myblog_site关联，checkin 123456$ cd ~/myblog_site$ git init$ git add *$ git commit -a -m "init blog raw data."$ git remote add origin git@github.com:username/myblog_site.git$ git push -u origin master #将本地代码推送到远程代码库 至此博客的数据代码库建立完成。 在虚拟主机上建立相同的站点 登录虚拟主机，按照上面的步骤完成安装，假设仍然将hexo工作目录放在~/hexo/。 checkout博客的配置和文章数据： 12345678910$ cd$ scp id_rsa.pub ~/.ssh/ #将上面生成的私钥放置在虚拟主机服务器上$ git clone git@github.com:username/myblog_site.git #将配置/文章代码库克隆到本地$ cd ~/hexo/ #进入安装初始化好的博客工作目录$ rm -rf _config.yml scaffolds source themes/next/_config.yml$ ln -s ~/myblog_site/_config.yml # 如下分别将文件链接到代码库中的相同文件/目录$ ln -s ~/myblog_site/scaffolds$ ln -s ~/myblog_site/source$ cd themes/next/$ ln -s ~/myblog_site/themes/next/_config.yml 在虚拟主机上执行静态页面生成与部署： 123$ hexo g$ hexo d$ hexo s &amp; 后续写作过程 在一台新的工作电脑上（已安装git），将myblog_site克隆到本地目录。 使用任意markdown编辑器，编辑/添加文章到相应目录，或修改配置文件。 发布时先checkin到github: 12$ git commit -a -m "comments"$ git push origin master 登录到自己的虚拟主机执行myblog_site的checkout，然后执行静态页面的生成与部署到github.io，同时主机上启动服务。 关于markdown编辑器目前有多种编辑器可供使用,比如markdownpad, 在线的简书编辑器等，我自己更喜欢一些开源，免费，简单可移植的工具。工作中一直在用notepad++这个工具觉得很不错。notepad++也有第三方的plugin可以进行简单的markdown解析预览，虽然效果不是特别好，但是对于日常的文章写作足够用。 notepad++ notepad++ markdown预览插件：MarkdownViewerPlusPlus notepad++ markdown语法高亮插件：Markdown Syntax Highlighting for Notepad++ 以上所有部件均为纯绿色版本，存进自己的U盘，随身携带，即插即用。 完善博客功能添加搜索hexo-generator-searchdb –save 添加站点地图npm install hexo-generator-sitemap –savenpm install hexo-generator-baidu-sitemap –save 添加RSS添加fork me on github 在GitHub Ribbons或GitHub Corners选择一款你喜欢的挂饰，拷贝方框内的代码。 将刚刚复制的挂饰代码，添加到hexo/themes/next/layout/_layout.swig文件中，放在下方。 12&lt;div class=&quot;headband&quot;&gt;&lt;/div&gt;&lt;a href=&quot;https://github.com/redfuture/&quot; class=&quot;github-corner&quot; aria-label=&quot;View source on GitHub&quot;&gt;&lt;svg width=&quot;80&quot; height=&quot;80&quot; viewBox=&quot;0 0 250 250&quot; style=&quot;fill:#151513; color:#fff; position: absolute; top: 0; border: 0; right: 0;&quot; aria-hidden=&quot;true&quot;&gt;&lt;path d=&quot;M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2&quot; fill=&quot;currentColor&quot; style=&quot;transform-origin: 130px 106px;&quot; class=&quot;octo-arm&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z&quot; fill=&quot;currentColor&quot; class=&quot;octo-body&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;style&gt;.github-corner:hover .octo-arm&#123;animation:octocat-wave 560ms ease-in-out&#125;@keyframes octocat-wave&#123;0%,100%&#123;transform:rotate(0)&#125;20%,60%&#123;transform:rotate(-25deg)&#125;40%,80%&#123;transform:rotate(10deg)&#125;&#125;@media (max-width:500px)&#123;.github-corner:hover .octo-arm&#123;animation:none&#125;.github-corner .octo-arm&#123;animation:octocat-wave 560ms ease-in-out&#125;&#125;&lt;/style&gt; 添加公益404页面设置阅读全文方式优化SEO设置侧栏头像文章中使用图片添加评论功能添加访问量统计静态网页最快接入计算访问量插件:不蒜子 接入方式很简单只需要将如下代码加入到页面中想要显示的位置:123456&lt;script async src="//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js"&gt;&lt;/script&gt;&lt;span id="busuanzi_container_site_pv"&gt;本站总访问量&lt;span id="busuanzi_value_site_pv"&gt;&lt;/span&gt;次本站访客数&lt;span id="busuanzi_value_site_uv"&gt;&lt;/span&gt;人次本文总阅读量&lt;span id="busuanzi_value_page_pv"&gt;&lt;/span&gt;次&lt;/span&gt; 在hexo的next主题中已经集成了不蒜子，使用起来更为方便，只需修改next的主题的配置文件：themes/next/_config.yml123456789101112131415busuanzi_count: # count values only if the other configs are false enable: true # custom uv span for the whole site site_uv: true site_uv_header: &lt;i class=&quot;fa fa-user&quot;&gt;&lt;/i&gt; site_uv_footer: # custom pv span for the whole site site_pv: true site_pv_header: &lt;i class=&quot;fa fa-eye&quot;&gt;&lt;/i&gt; site_pv_footer: # custom pv span for one page only page_pv: true page_pv_header: &lt;i class=&quot;fa fa-file-o&quot;&gt;&lt;/i&gt; page_pv_footer: 由于不蒜子的域名改变，还需修改next主题中不蒜子的地址，位于文件themes/next/layout/_third-party/analytics/busuanzi-counter.swig。 1&lt;script async src=&quot;https://busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js&quot;&gt;&lt;/script&gt;]]></content>
      <categories>
        <category>软件使用</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>skills</tag>
        <tag>github.io</tag>
      </tags>
  </entry>
</search>
